"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4232],{62723:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"tutorial/development/deploy_in_cloud","title":"Simulations in a Kubernetes cluster","description":"Simulations can be run both locally and distributed within a Kubernetes cluster (K8s). Kubernetes orchestrates applications across a set of heterogeneous computing machines.","source":"@site/docs/tutorial/development/deploy_in_cloud.md","sourceDirName":"tutorial/development","slug":"/tutorial/development/deploy_in_cloud","permalink":"/docs/tutorial/development/deploy_in_cloud","draft":false,"unlisted":false,"editUrl":"https://github.com/MARS-Group-HAW/MARS-Group-HAW.github.io/edit/main/docs/tutorial/development/deploy_in_cloud.md","tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"sidebar_label":"Kubernetes","sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Known Problems and Solutions","permalink":"/docs/tutorial/development/known-problems"},"next":{"title":"Configuration","permalink":"/docs/category/configuration"}}');var a=i(74848),s=i(28453);const o={sidebar_label:"Kubernetes",sidebar_position:100},r="Simulations in a Kubernetes cluster",l={},c=[{value:"Prerequisite.",id:"prerequisite",level:2},{value:"Customize the simulation start",id:"customize-the-simulation-start",level:2},{value:"Create a simulation application",id:"create-a-simulation-application",level:2},{value:"Preparing a container",id:"preparing-a-container",level:2},{value:"Preparing a deployment",id:"preparing-a-deployment",level:2},{value:"Starting the simulation in the cluster",id:"starting-the-simulation-in-the-cluster",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"simulations-in-a-kubernetes-cluster",children:"Simulations in a Kubernetes cluster"})}),"\n",(0,a.jsx)(n.p,{children:"Simulations can be run both locally and distributed within a Kubernetes cluster (K8s). Kubernetes orchestrates applications across a set of heterogeneous computing machines."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisite",children:"Prerequisite."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop",children:"Docker"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://kubernetes.io/de/docs/tasks/tools/install-kubectl/",children:"kubectl"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://userdoc.informatik.haw-hamburg.de/doku.php?id=docu:informatikcomputecloud#login/",children:"kubelogin"})," (If simulation is to be started in MARS ICC-K8s)."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"customize-the-simulation-start",children:"Customize the simulation start"}),"\n",(0,a.jsxs)(n.p,{children:["To start a simulation in the K8s computing cluster the model must be built. Navigate to the directory where the ",(0,a.jsx)(n.code,{children:"csproj"})," file and your entry point ",(0,a.jsx)(n.code,{children:"Main()"})," is located (More about defining the entry point can be found ",(0,a.jsx)(n.a,{href:"/docs/tutorial/development/model",children:"here"}),")."]}),"\n",(0,a.jsxs)(n.p,{children:["Open the file and create a ",(0,a.jsx)(n.code,{children:"ModelDescription"})," like ",(0,a.jsx)(n.a,{href:"/docs/tutorial/development/model",children:"here"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'using Mars.Interfaces;\nusing Mars.Interfaces.Model;\nusing Mars.Components.Starter;\n\npublic static class Program \n{\n    public static void Main() \n    {\n        var description = new ModelDescription();\n        \n        // Add here your layers\n        description.AddLayer<YourLayerType>();\n        // maybe more raster and vector layer\n        // description.AddLayer<YourVectorLayer>();\n        // description.AddLayer<YourRasterLayer>();\n        \n        // Add your agent types \n        description.AddAgent<YourAgentType, YourLayerType>();\n        \n        // Optionally add entity types\n        // description.AddEntity<YourEntity>();\n        \n        \n        var configFromOutside = Environment.GetEnvironmentVariable("CONFIG");\n        var simulationConfig = SimulationConfig.Deserialize(configFromOutside);\n        \n        // Create the simulation application and resolve the simulation entry point\n        var application = SimulationStarter.BuildApplication(description, args);\n        var simulation = application.Resolve<ISimulation>();\n        \n        // Start your simulation and print some measurements\n        var state = simulation.StartSimulation();\n        Console.WriteLine($"Input/Initialization phase lasted:   {state.InputWatch.ElapsedMilliseconds}");\n        Console.WriteLine($"Computing phase lasted:              {state.TickWatch.ElapsedMilliseconds}");\n        Console.WriteLine($"Output/Write phase lasted:           {state.OutputWatch.ElapsedMilliseconds}");\n    }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Main()"})," method has been changed to get the ",(0,a.jsx)(n.code,{children:"SimulationConfig"})," via a ",(0,a.jsx)(n.code,{children:"CONFIG"})," environment variable instead of reading it via ",(0,a.jsx)(n.code,{children:"--sm config.json"})," or directly from a file."]}),"\n",(0,a.jsx)(n.h2,{id:"create-a-simulation-application",children:"Create a simulation application"}),"\n",(0,a.jsxs)(n.p,{children:["An existing model must be packaged into a container to run in a K8s cluster. The following command creates the simulation and saves the program (box) in the folder ",(0,a.jsx)(n.code,{children:"my_simulation_app"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet publish -c Release -o my_simulation_app\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Make sure that all relevant input files (e.g.: ",(0,a.jsx)(n.code,{children:"geojson"})," or ",(0,a.jsx)(n.code,{children:"asc"})," files) are present in the folder ",(0,a.jsx)(n.code,{children:"my_simulatio_app"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"preparing-a-container",children:"Preparing a container"}),"\n",(0,a.jsxs)(n.p,{children:["The easiest way to create a container is as a Docker container. To do this, an empty file called ",(0,a.jsx)(n.code,{children:"Dockerfile"})," must be created, from which the ",(0,a.jsx)(n.strong,{children:"Docker image"})," will be created:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"touch Dockerfile\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"Dockerfile"})," and insert the following lines:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dockerfile",metastring:'title="Dockerfile"',children:"FROM mcr.microsoft.com/dotnet/runtime:6.0\n\nCOPY ./ ./\nWORKDIR ./\n\nENTRYPOINT dotnet <YourModelName>.dll \n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Adjust the variable ",(0,a.jsx)(n.code,{children:"YourModelName"})," for your model. This is the name of the ",(0,a.jsx)(n.code,{children:"csproj"})," file where you run these commands."]})}),"\n",(0,a.jsx)(n.p,{children:"Build the Docker image and tag it with a fully-qualified name of your container repo. The container repo is where the image is then stored and can be loaded and run by K8s:"}),"\n",(0,a.jsx)(n.p,{children:"For the MARS ICC, the following applies:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker build --platform linux/amd64 -t git.haw-hamburg.de:5005/<user>/<repo>/my_simulation:latest .\n"})}),"\n",(0,a.jsx)(n.p,{children:"The image has been built and must be uploaded at the container registration. Please log in to the container registration first.\nFor the MARS ICC applies:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker login git.haw-hamburg.de:5005 \n"})}),"\n",(0,a.jsx)(n.p,{children:"Upload the image:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker push git.haw-hamburg.de:5005/<user>/<repo>/my_simulation:latest \n"})}),"\n",(0,a.jsx)(n.h2,{id:"preparing-a-deployment",children:"Preparing a deployment"}),"\n",(0,a.jsx)(n.p,{children:"For launching in K8s, a specification is required in addition to the container to launch an application (simulation)."}),"\n",(0,a.jsxs)(n.p,{children:["First make sure you have a ",(0,a.jsx)(n.a,{href:"https://icc.informatik.haw-hamburg.de/docs/haw-tutorial/#deployment-auslieferung-der-applikation-in-die-icc",children:"deploy-token configured"}),". This is need, so K8s can pull the previously created Docker image from the HAW GitLab registry."]}),"\n",(0,a.jsxs)(n.p,{children:["Then create a ",(0,a.jsx)(n.code,{children:"my_simulation_job.yml"})," file and add the following content:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: my_simulation\nspec:\n  template:\n    spec:\n      imagePullSecrets:\n        - name: application-deploy-token\n      containers:\n      - name: my_simulation\n        image: git.haw-hamburg.de:5005/mars/life/my_simulation:latest\n        env:\n          - name: CONFIG\n            value: \'\n            {\n              "globals": {\n               "deltaT": 1,\n               "startPoint": "2020-01-01T00:00:00",\n               "endPoint": "2020-01-31T00:00:00",\n               "deltaTUnit": "seconds"\n             },\n              "agents": [\n                { "name": "YourAgentType", "count": 10 }\n              ],\n              "layers": [\n                { "name": "YourVectorLayer", "file": "res/your_vector_layer_input.geojson" },\n                { "name": "YourRasterLayer", "file": "res/your_raster_input.asc" },\n            }\n            \'\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note that the ",(0,a.jsx)(n.a,{href:"/docs/tutorial/configuration/sim_config_options",children:"here"})," simulation configuration is noted in JSON and available as a string via the environment variable ",(0,a.jsx)(n.code,{children:"CONFIG"})," in the application. Thus the scenario can be adapted directly via this specification. Furthermore, all input files (e.g. ",(0,a.jsx)(n.code,{children:"geojson"})," or ",(0,a.jsx)(n.code,{children:"asc"})," files) must be included in the image."]}),"\n",(0,a.jsx)(n.h2,{id:"starting-the-simulation-in-the-cluster",children:"Starting the simulation in the cluster"}),"\n",(0,a.jsxs)(n.p,{children:["For the MARS ICC it is necessary to log in to the cluster beforehand using the tools ",(0,a.jsx)(n.code,{children:"kubelogin"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubelogin --username <HAWIdentifer such as abc123> --password <YourPassword>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"kubectl"})," tool can be used to apply the specification to the set cluster:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f my_simulation_job.yml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["K8s then tries to load the created and uploaded Docker image and start the container. At startup, the simulation application loads the simulation configuration from the environment variable ",(0,a.jsx)(n.code,{children:"CONFIG"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Via the command ",(0,a.jsx)(n.code,{children:"$ kubectl get pod"})," currently running applications are listed. An entry of the form ",(0,a.jsx)(n.code,{children:"my_simulation-cbf7c989d-fnpzv"})," should appear and have the status ",(0,a.jsx)(n.code,{children:"Running"})," or ",(0,a.jsx)(n.code,{children:"Creating"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["If the container has the status ",(0,a.jsx)(n.code,{children:"Succeeded"}),", the simulation application has finished successfully.\nIf the container has the status ",(0,a.jsx)(n.code,{children:"Failed"}),", the cause is usually a configuration- or model error and the reason must be determined using simulation logs or the K8s logs:"]}),"\n",(0,a.jsx)(n.p,{children:"Showing the internal logs and console output when something crashed within the simulation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl logs pod/my_simulation-cbf7c989d-fnpzv\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Showing the K8s configuration and applied specification of ",(0,a.jsx)(n.code,{children:"my_simulation_job.yml"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl describe pod my_simulation-cbf7c989d-fnpzv\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(96540);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);