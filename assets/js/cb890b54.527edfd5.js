"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7352],{65572:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"tutorial/soh/entities","title":"Entities","description":"SmartOpenHamburg distinguishes between agents (acting individuals) and entities (usable objects) within the simulation. Both can be initialized using files (see Agent Configuration).","source":"@site/docs/tutorial/soh/entities.md","sourceDirName":"tutorial/soh","slug":"/tutorial/soh/entities","permalink":"/docs/tutorial/soh/entities","draft":false,"unlisted":false,"editUrl":"https://github.com/MARS-Group-HAW/MARS-Group-HAW.github.io/edit/main/docs/tutorial/soh/entities.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"Traveler","permalink":"/docs/tutorial/soh/agents/traveler"},"next":{"title":"Steering concept","permalink":"/docs/tutorial/soh/steering"}}');var r=t(74848),s=t(28453);const c={sidebar_position:20},d="Entities",a={},l=[{value:"Car",id:"car",level:2},{value:"Parking Space",id:"parking-space",level:3},{value:"Bicycle",id:"bicycle",level:2},{value:"Rental Bicycle",id:"rental-bicycle",level:3},{value:"Ferry",id:"ferry",level:2}];function h(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"entities",children:"Entities"})}),"\n",(0,r.jsxs)(i.p,{children:["SmartOpenHamburg distinguishes between ",(0,r.jsx)(i.a,{href:"/docs/tutorial/soh/agents/",children:(0,r.jsx)(i.code,{children:"agents"})})," (acting individuals) and ",(0,r.jsx)(i.code,{children:"entities"})," (usable objects) within the simulation. Both can be initialized using files (see ",(0,r.jsx)(i.a,{href:"/docs/tutorial/configuration/agent_config",children:"Agent Configuration"}),").\nEntities are initialized by an ",(0,r.jsx)(i.code,{children:"EntityManager"})," that has a data source (e.g. a csv-file like ",(0,r.jsx)(i.code,{children:"car.csv"}),"). While every agent is unique, there may be multiple entities with the same initialization."]}),"\n",(0,r.jsxs)(i.p,{children:["The following example displays a ",(0,r.jsx)(i.code,{children:"car.csv"}),". It defines values for relevant attributes of the ",(0,r.jsx)(i.a,{href:"#car",children:(0,r.jsx)(i.code,{children:"Car"})}),". Every instance of a car is initialized by referencing the ",(0,r.jsx)(i.em,{children:"type"})," column. All cars of ",(0,r.jsx)(i.em,{children:"type"})," ",(0,r.jsx)(i.code,{children:"Golf"})," have for instance a ",(0,r.jsx)(i.code,{children:"maxSpeed"})," of 13.89 m/s."]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"type"}),(0,r.jsx)(i.th,{children:"maxAcceleration"}),(0,r.jsx)(i.th,{children:"maxDeceleration"}),(0,r.jsx)(i.th,{children:"maxSpeed"}),(0,r.jsx)(i.th,{children:"length"}),(0,r.jsx)(i.th,{children:"height"}),(0,r.jsx)(i.th,{children:"width"}),(0,r.jsx)(i.th,{children:"trafficCode"}),(0,r.jsx)(i.th,{children:"passengerCapacity"}),(0,r.jsx)(i.th,{children:"velocity"}),(0,r.jsx)(i.th,{children:"mass"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Golf"}),(0,r.jsx)(i.td,{children:"0.73"}),(0,r.jsx)(i.td,{children:"1.67"}),(0,r.jsx)(i.td,{children:"13.89"}),(0,r.jsx)(i.td,{children:"4.5"}),(0,r.jsx)(i.td,{children:"2"}),(0,r.jsx)(i.td,{children:"2"}),(0,r.jsx)(i.td,{children:"german"}),(0,r.jsx)(i.td,{children:"4"}),(0,r.jsx)(i.td,{children:"0"}),(0,r.jsx)(i.td,{children:"1500"})]})})]}),"\n",(0,r.jsx)(i.p,{children:"The properties are further described below:"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"property"}),(0,r.jsx)(i.th,{children:"description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"type"}),(0,r.jsx)(i.td,{children:"Identification column"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"maxAcceleration"}),(0,r.jsx)(i.td,{children:"Acceleration module parameter in meter/second\xb2"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"maxDeceleration"}),(0,r.jsx)(i.td,{children:"Acceleration module parameter in meter/second\xb2"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"maxSpeed"}),(0,r.jsx)(i.td,{children:"Acceleration module parameter in meter/second"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"length"}),(0,r.jsx)(i.td,{children:"Dimension parameter for occupancy on the road in meter"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"height"}),(0,r.jsx)(i.td,{children:"Dimension parameter for occupancy on the road in meter"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"width"}),(0,r.jsx)(i.td,{children:"Dimension parameter for occupancy on the road in meter"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"trafficCode"}),(0,r.jsx)(i.td,{children:"Identifies the behavior on intersections without traffic lights"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"passengerCapacity"}),(0,r.jsx)(i.td,{children:"The amount of passenger that can be driven by the car beside the driver"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"velocity"}),(0,r.jsx)(i.td,{children:"The starting velocity in meter/second"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"mass"}),(0,r.jsx)(i.td,{children:"Might be used by the acceleration module but is not right now. Unit in kilogram"})]})]})]}),"\n",(0,r.jsx)(i.p,{children:"As by now the model includes the following entity types:"}),"\n",(0,r.jsx)(i.h2,{id:"car",children:"Car"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"Car"})," is a ",(0,r.jsx)(i.code,{children:"Vehicle"})," that is used for the ",(0,r.jsx)(i.code,{children:"Car"})," modal type."]}),"\n",(0,r.jsxs)(i.p,{children:["Only a ",(0,r.jsx)(i.code,{children:"ICarSteeringHandle"})," can use the car to move along the corresponding ",(0,r.jsx)(i.code,{children:"CarGraph"}),". The steering (",(0,r.jsx)(i.code,{children:"CarSteeringHandle"}),") implements the ",(0,r.jsx)(i.a,{href:"https://www.worldcat.org/title/simulation-des-straenverkehrsflusses/oclc/634105860?lang=de",children:(0,r.jsx)(i.em,{children:"Wiedemann Equation"})})," and that is used to determine the acceleration ratio."]}),"\n",(0,r.jsx)(i.h3,{id:"parking-space",children:"Parking Space"}),"\n",(0,r.jsxs)(i.p,{children:["Cars can be dropped off directly in the environment to represent available parking zones. In the model there is ",(0,r.jsx)(i.code,{children:"ParkingSpaceLayer"})," available which manages ",(0,r.jsx)(i.code,{children:"ParkSpace"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"Car"})," can be used transport passengers and be used by ",(0,r.jsx)(i.code,{children:"MultiCapableAgent"})," (for more look here ",(0,r.jsx)(i.a,{href:"/docs/tutorial/soh/agents/multi_capable_agent",children:"MultiCapableAgent"}),")."]}),"\n",(0,r.jsx)(i.h2,{id:"bicycle",children:"Bicycle"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"Bicycle"})," is a ",(0,r.jsx)(i.code,{children:"Vehicle"})," that is used for the ",(0,r.jsx)(i.code,{children:"Cycling"})," modal type."]}),"\n",(0,r.jsxs)(i.p,{children:["Only a ",(0,r.jsx)(i.code,{children:"IBicycleSteeringCapable"})," can use the bicycle for driving, because the steering interface (",(0,r.jsx)(i.code,{children:"BicycleSteeringHandle"}),") requires some properties for the underlying ",(0,r.jsx)(i.a,{href:"https://www.worldcat.org/title/simulation-des-straenverkehrsflusses/oclc/634105860?lang=de",children:(0,r.jsx)(i.em,{children:"Wiedemann Equation"})})," that is used to determine the acceleration ratio."]}),"\n",(0,r.jsx)(i.h3,{id:"rental-bicycle",children:"Rental Bicycle"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"RentalBicycle"})," is a specific ",(0,r.jsx)(i.code,{children:"Bicycle"})," that can be leased from rental stations (see ",(0,r.jsx)(i.a,{href:"/docs/tutorial/soh/layers/modal_layer",children:(0,r.jsx)(i.code,{children:"BicycleRentalStation"})}),"). It has to be returned to a station in order to switch back to walking.\nThe type of a rental bicycle is ",(0,r.jsx)(i.code,{children:"city"})," as it is defined in the ",(0,r.jsx)(i.code,{children:"bicycle.csv"})]}),"\n",(0,r.jsx)(i.h2,{id:"ferry",children:"Ferry"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"Ferry"})," is a ",(0,r.jsx)(i.code,{children:"Vehicle"})," that is used by the ",(0,r.jsx)(i.code,{children:"FerryDriver"})," to commute between ",(0,r.jsx)(i.code,{children:"FerryStations"})," on predefined routes called ",(0,r.jsx)(i.code,{children:"FerryLines"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["As right now, the ferry has only a capacity property for passengers (e.g. ",(0,r.jsx)(i.a,{href:"/docs/tutorial/soh/agents/multi_capable_agent",children:"MultiCapableAgent"}),")."]}),"\n",(0,r.jsxs)(i.p,{children:["Further information can be found in the ",(0,r.jsx)(i.a,{href:"/docs/tutorial/soh/scenarios/ferry_transfer",children:"FerryTransfer"})," scenario."]})]})}function o(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>c,x:()=>d});var n=t(96540);const r={},s=n.createContext(r);function c(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);