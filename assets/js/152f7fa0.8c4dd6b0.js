"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1585],{49265:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"tutorial/soh/steering","title":"Steering concept","description":"To use a transportation capability (modal type) an agent requires to implement the `ISteeringCapable interface (e.g. ICarSteeringCapable, see figure below), which defines methods and properties that this agent must offer to be able to steer that Vehicle`.","source":"@site/docs/tutorial/soh/steering.md","sourceDirName":"tutorial/soh","slug":"/tutorial/soh/steering","permalink":"/docs/tutorial/soh/steering","draft":false,"unlisted":false,"editUrl":"https://github.com/MARS-Group-HAW/MARS-Group-HAW.github.io/edit/main/docs/tutorial/soh/steering.md","tags":[],"version":"current","sidebarPosition":25,"frontMatter":{"sidebar_position":25},"sidebar":"tutorialSidebar","previous":{"title":"Entities","permalink":"/docs/tutorial/soh/entities"},"next":{"title":"Modal Layer","permalink":"/docs/tutorial/soh/layers/modal_layer"}}');var i=n(74848),s=n(28453);const r={sidebar_position:25},o="Steering concept",l={},c=[];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",header:"header",img:"img",mermaid:"mermaid",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"steering-concept",children:"Steering concept"})}),"\n",(0,i.jsxs)(t.p,{children:["To use a transportation capability (modal type) an agent requires to implement the ",(0,i.jsx)(t.code,{children:"ISteeringCapable"})," interface (e.g. ",(0,i.jsx)(t.code,{children:"ICarSteeringCapable"}),", see figure below), which defines methods and properties that this agent must offer to be able to steer that ",(0,i.jsx)(t.code,{children:"Vehicle"}),".\nBesides steering the vehicle the agent may also use some vehicles as a passenger (e.g. using the ",(0,i.jsx)(t.a,{href:"/docs/tutorial/soh/entities#ferry",children:(0,i.jsx)(t.code,{children:"Ferry"})}),"). The ",(0,i.jsx)(t.code,{children:"IPassengerCapable"})," is implemented by the ",(0,i.jsx)(t.a,{href:"/docs/tutorial/soh/agents/multi_modal_agent",children:(0,i.jsx)(t.code,{children:"MultimodalAgent"})})," and informs the agent with a ",(0,i.jsx)(t.code,{children:"PassengerMessage"})," about the current status of the drive. It may for instance notify the agent at every stop (e.g. ",(0,i.jsx)(t.code,{children:"FerryStation"}),") so that the agent may decide to leave or stay on the ferry."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"ISteeringHandle"})," is the interface for an agent to drive the vehicle. Every ",(0,i.jsx)(t.code,{children:"Vehicle"})," has a specific steering handle and provides that to the agent on successful enter."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"uml_car_steering",src:n(33691).A+"",width:"690",height:"343"})}),"\n",(0,i.jsxs)(t.p,{children:["Adding new transportation modalities is supported by the ",(0,i.jsx)(t.code,{children:"MultimodalAgent"})," if it complies with the ",(0,i.jsx)(t.em,{children:"steering concept"})," (see below)."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"uml_multimodal_agent",src:n(93587).A+"",width:"1416",height:"795"})}),"\n",(0,i.jsx)(t.mermaid,{value:"classDiagram\n\n    class IPassengerCapable {\n        <<Interface>>\n        Notify(passengerMessage:PassengerMessage) void\n    }\n\n    class IWalkingCapable {\n        <<Interface>>\n        PreferredSpeed double\n    }\n\n    class ISteeringCapable {\n        <<Interface>>\n    }\n\n    IPositionable <|-- IPassengerCapable\n    IPassengerCapable <|-- ISteeringCapable\n    ISteeringCapable <|-- IWalkingCapable\n\n    class WalkingSteeringHandle {\n        + WalkingSteeringHandle(multimodalAgent:MultimodalAgent, accelerator:WalkingAccelerator, environment:ISpatialGraphEnvironment, position:Position)\n        + Environment : ISpatialGraphEnvironment\n        + Route : Route\n        + GoalReached : bool\n        + Velocity : double\n        + <<virtual>> Move() void\n        + Position : Position\n        + LeaveVehicle(passengerCapable:IPassengerCapable) bool\n    }\n    ISteeringHandle <|-- WalkingSteeringHandle\n\n    class PassengerMessage {\n        <<Enumeration>>\n        GoalReached\n        NoDriver\n        TerminalStation\n    }"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},33691:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/uml_car_steering-8f3a1ab6c51f2859739861a231c118c6.png"},93587:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/uml_multimodal_agent-fe1264e79575ab62030ea0d1742e60aa.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var a=n(96540);const i={},s=a.createContext(i);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);