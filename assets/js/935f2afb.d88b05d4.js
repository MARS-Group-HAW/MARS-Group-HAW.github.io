"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/tutorial/intro","docId":"tutorial/intro"},{"type":"link","label":"Installation","href":"/docs/tutorial/installation","docId":"tutorial/installation"},{"type":"category","label":"MARS - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Concepts","href":"/docs/tutorial/mars-basics/","docId":"tutorial/mars-basics/index"},{"type":"link","label":"Your first model","href":"/docs/tutorial/mars-basics/first-model","docId":"tutorial/mars-basics/first-model"},{"type":"link","label":"Configuration","href":"/docs/tutorial/mars-basics/configuration","docId":"tutorial/mars-basics/configuration"},{"type":"link","label":"Outputs","href":"/docs/tutorial/mars-basics/outputs","docId":"tutorial/mars-basics/outputs"}],"href":"/docs/category/mars---basics"},{"type":"category","label":"Development","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating a model","href":"/docs/tutorial/development/createing-a-model","docId":"tutorial/development/createing-a-model"},{"type":"link","label":"ModelDescription","href":"/docs/tutorial/development/model","docId":"tutorial/development/model"},{"type":"link","label":"Agent","href":"/docs/tutorial/development/agent","docId":"tutorial/development/agent"},{"type":"link","label":"Entity","href":"/docs/tutorial/development/entity","docId":"tutorial/development/entity"},{"type":"link","label":"Layers","href":"/docs/tutorial/development/layers","docId":"tutorial/development/layers"},{"type":"link","label":"Spawning and Removing Agents and Entities","href":"/docs/tutorial/development/spawning","docId":"tutorial/development/spawning"},{"type":"category","label":"Environments","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SpatialHashEnvironment (Grid Environment)","href":"/docs/tutorial/development/environments/spatialhashenv","docId":"tutorial/development/environments/spatialhashenv"},{"type":"link","label":"GeoHashEnvironment (Geospatial Grid Environment)","href":"/docs/tutorial/development/environments/geohashenv","docId":"tutorial/development/environments/geohashenv"},{"type":"link","label":"SpatialGraphEnvironment (SGE)","href":"/docs/tutorial/development/environments/spatialgraphenv","docId":"tutorial/development/environments/spatialgraphenv"},{"type":"link","label":"Collision Environment","href":"/docs/tutorial/development/environments/collisionenv","docId":"tutorial/development/environments/collisionenv"}],"href":"/docs/tutorial/development/environments/"},{"type":"link","label":"Known Problems and Solutions","href":"/docs/tutorial/development/known-problems","docId":"tutorial/development/known-problems"},{"type":"link","label":"Kubernetes","href":"/docs/tutorial/development/deploy_in_cloud","docId":"tutorial/development/deploy_in_cloud"}],"href":"/docs/category/development"},{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Simulation Configuration","href":"/docs/tutorial/configuration/sim_config_options","docId":"tutorial/configuration/sim_config_options"},{"type":"link","label":"Execution Configuration","href":"/docs/tutorial/configuration/execution","docId":"tutorial/configuration/execution"},{"type":"link","label":"Agent Configuration","href":"/docs/tutorial/configuration/agent_config","docId":"tutorial/configuration/agent_config"},{"type":"link","label":"Layer Configuration","href":"/docs/tutorial/configuration/layer_config","docId":"tutorial/configuration/layer_config"},{"type":"link","label":"Simulation Output Formats","href":"/docs/tutorial/configuration/sim_output_formats","docId":"tutorial/configuration/sim_output_formats"},{"type":"link","label":"Output Filter","href":"/docs/tutorial/configuration/output_filter","docId":"tutorial/configuration/output_filter"}],"href":"/docs/category/configuration"},{"type":"category","label":"Data sources","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Comma-Separated Values (CSV)","href":"/docs/tutorial/data-sources/csv","docId":"tutorial/data-sources/csv"},{"type":"link","label":"ASC files","href":"/docs/tutorial/data-sources/ascii-grid","docId":"tutorial/data-sources/ascii-grid"},{"type":"link","label":"Time-series data","href":"/docs/tutorial/data-sources/time-series","docId":"tutorial/data-sources/time-series"},{"type":"link","label":"How to prepare a vector/raster layer file","href":"/docs/tutorial/data-sources/create_vector_layer_raster_layer","docId":"tutorial/data-sources/create_vector_layer_raster_layer"},{"type":"link","label":"Generation and use of geo-information data","href":"/docs/tutorial/data-sources/geo-data-acquisition","docId":"tutorial/data-sources/geo-data-acquisition"},{"type":"link","label":"Geospatial Data","href":"/docs/tutorial/data-sources/geospatial_data_sources","docId":"tutorial/data-sources/geospatial_data_sources"},{"type":"link","label":"geospatial_data_types","href":"/docs/tutorial/data-sources/geospatial_data_types","docId":"tutorial/data-sources/geospatial_data_types"}],"href":"/docs/tutorial/data-sources/"},{"type":"category","label":"Analysis & Visualization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Simple Live Visualization","href":"/docs/tutorial/analysis/live_visualization","docId":"tutorial/analysis/live_visualization"},{"type":"link","label":"Visualizing Agent Movement","href":"/docs/tutorial/analysis/visualizing_agent_trips_kepler","docId":"tutorial/analysis/visualizing_agent_trips_kepler"},{"type":"link","label":"Analyzing Simulation Output","href":"/docs/tutorial/analysis/visualizing_sim_results","docId":"tutorial/analysis/visualizing_sim_results"}],"href":"/docs/category/analysis--visualization"},{"type":"category","label":"Snippets","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Agent state","href":"/docs/tutorial/snippets/agent-states","docId":"tutorial/snippets/agent-states"},{"type":"link","label":"Movement","href":"/docs/tutorial/snippets/movement","docId":"tutorial/snippets/movement"}],"href":"/docs/category/snippets"},{"type":"category","label":"SmartOpenHamburg","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Quick Start","href":"/docs/tutorial/soh/getting-started","docId":"tutorial/soh/getting-started"},{"type":"category","label":"Agents","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Multimodal Agent","href":"/docs/tutorial/soh/agents/multi_modal_agent","docId":"tutorial/soh/agents/multi_modal_agent"},{"type":"link","label":"Multi-Capable Agent","href":"/docs/tutorial/soh/agents/multi_capable_agent","docId":"tutorial/soh/agents/multi_capable_agent"},{"type":"link","label":"Citizen","href":"/docs/tutorial/soh/agents/citizen","docId":"tutorial/soh/agents/citizen"},{"type":"link","label":"Traveler","href":"/docs/tutorial/soh/agents/traveler","docId":"tutorial/soh/agents/traveler"}],"href":"/docs/tutorial/soh/agents/"},{"type":"link","label":"Entities","href":"/docs/tutorial/soh/entities","docId":"tutorial/soh/entities"},{"type":"link","label":"Steering concept","href":"/docs/tutorial/soh/steering","docId":"tutorial/soh/steering"},{"type":"category","label":"Layers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Modal Layer","href":"/docs/tutorial/soh/layers/modal_layer","docId":"tutorial/soh/layers/modal_layer"},{"type":"link","label":"Multimodal Layer","href":"/docs/tutorial/soh/layers/multi_modal_layer","docId":"tutorial/soh/layers/multi_modal_layer"},{"type":"link","label":"Scheduler Layer","href":"/docs/tutorial/soh/layers/scheduling_layer","docId":"tutorial/soh/layers/scheduling_layer"},{"type":"link","label":"Vector Layer","href":"/docs/tutorial/soh/layers/vector_layer","docId":"tutorial/soh/layers/vector_layer"}]},{"type":"category","label":"Ready to use scenarios","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"FerryTransfer","href":"/docs/tutorial/soh/scenarios/ferry_transfer","docId":"tutorial/soh/scenarios/ferry_transfer"},{"type":"link","label":"Green4Bikes","href":"/docs/tutorial/soh/scenarios/green_4_bikes","docId":"tutorial/soh/scenarios/green_4_bikes"}],"href":"/docs/tutorial/soh/scenarios/"}],"href":"/docs/tutorial/soh/"},{"type":"link","label":"MARS Explorer","href":"/docs/tutorial/mars-explorer","docId":"tutorial/mars-explorer"}],"apiSidebar":[{"type":"link","label":"Introduction","href":"/docs/api/","docId":"api/index"},{"type":"link","label":"Folder structure","href":"/docs/api/folder-structure","docId":"api/folder-structure"}]},"docs":{"api/folder-structure":{"id":"api/folder-structure","title":"Folder structure","description":"Recommended folder strcuture for a MARS project.","sidebar":"apiSidebar"},"api/index":{"id":"api/index","title":"MARS API","description":"On the following pages the most important classes and features of the LIFE framework are explained.","sidebar":"apiSidebar"},"tutorial/analysis/live_visualization":{"id":"tutorial/analysis/live_visualization","title":"Simple Live Visualization","description":"Explains how to open a simple Python visualization that displays live results (mostly suited for grid-models).","sidebar":"tutorialSidebar"},"tutorial/analysis/visualizing_agent_trips_kepler":{"id":"tutorial/analysis/visualizing_agent_trips_kepler","title":"Visualizing Agent Movement","description":"Explains how to visualize agent movement in Kepler.","sidebar":"tutorialSidebar"},"tutorial/analysis/visualizing_sim_results":{"id":"tutorial/analysis/visualizing_sim_results","title":"Analyzing Simulation Output","description":"Explains how to create diagrams and dashboards from simulation output.","sidebar":"tutorialSidebar"},"tutorial/configuration/agent_config":{"id":"tutorial/configuration/agent_config","title":"Agent Configuration","description":"Explains how to configure agent types.","sidebar":"tutorialSidebar"},"tutorial/configuration/execution":{"id":"tutorial/configuration/execution","title":"Execution Configuration","description":"The execution of the simulation can be defined globally or individually per agent type or instance. It specifies exactly how often an agent or the model should be executed.","sidebar":"tutorialSidebar"},"tutorial/configuration/layer_config":{"id":"tutorial/configuration/layer_config","title":"Layer Configuration","description":"Explains how to configure layers.","sidebar":"tutorialSidebar"},"tutorial/configuration/output_filter":{"id":"tutorial/configuration/output_filter","title":"Output Filter","description":"Explains how to configure output filters to reduce output size.","sidebar":"tutorialSidebar"},"tutorial/configuration/sim_config_options":{"id":"tutorial/configuration/sim_config_options","title":"Simulation Configuration","description":"Lists the simulation configuration options available for the config.","sidebar":"tutorialSidebar"},"tutorial/configuration/sim_output_formats":{"id":"tutorial/configuration/sim_output_formats","title":"Simulation Output Formats","description":"Describes the different formats in which simulation output data can be stored","sidebar":"tutorialSidebar"},"tutorial/data-sources/ascii-grid":{"id":"tutorial/data-sources/ascii-grid","title":"ASC files","description":"ASC files can be used to store cell-based information that can be loaded into a raster layer of a MARS model. For example, a temperature layer can be created using information from an .asc file to define different temperatures across the simulation environment.","sidebar":"tutorialSidebar"},"tutorial/data-sources/create_vector_layer_raster_layer":{"id":"tutorial/data-sources/create_vector_layer_raster_layer","title":"How to prepare a vector/raster layer file","description":"This tutorial offers a step-by-step guide on how to create a raster layer that can be used to populate a raster layer in a MARS model.","sidebar":"tutorialSidebar"},"tutorial/data-sources/csv":{"id":"tutorial/data-sources/csv","title":"Comma-Separated Values (CSV)","description":"CSV files are used in the system from multiple point of views. The system reads CSV files and infers on of the following separators: comma ,, semicolon ;, space  , or tabulator \\\\t.","sidebar":"tutorialSidebar"},"tutorial/data-sources/data-sources":{"id":"tutorial/data-sources/data-sources","title":"Data sources","description":"MARS can handle the following formats:","sidebar":"tutorialSidebar"},"tutorial/data-sources/geo-data-acquisition":{"id":"tutorial/data-sources/geo-data-acquisition","title":"Generation and use of geo-information data","description":"1. Find geographic data in a reasonable dimension","sidebar":"tutorialSidebar"},"tutorial/data-sources/geospatial_data_sources":{"id":"tutorial/data-sources/geospatial_data_sources","title":"Geospatial Data","description":"Geospatial data object containing a spatial reference in the form of coordinates. Often these are geocoordinate with the coordinate reference system srid4326.","sidebar":"tutorialSidebar"},"tutorial/data-sources/geospatial_data_types":{"id":"tutorial/data-sources/geospatial_data_types","title":"geospatial_data_types","description":"","sidebar":"tutorialSidebar"},"tutorial/data-sources/time-series":{"id":"tutorial/data-sources/time-series","title":"Time-series data","description":"Time-series data consist of datasets with temporal validity. Over the simulation time, only these data sets are provided by the layer that are valid for the current time step.","sidebar":"tutorialSidebar"},"tutorial/development/agent":{"id":"tutorial/development/agent","title":"Agent","description":"Definition of Agents","sidebar":"tutorialSidebar"},"tutorial/development/createing-a-model":{"id":"tutorial/development/createing-a-model","title":"Creating a model","description":"This explains how the Program.cs works and how to setup a model from scratch.","sidebar":"tutorialSidebar"},"tutorial/development/deploy_in_cloud":{"id":"tutorial/development/deploy_in_cloud","title":"Simulations in a Kubernetes cluster","description":"Simulations can be run both locally and distributed within a Kubernetes cluster (K8s). Kubernetes orchestrates applications across a set of heterogeneous computing machines.","sidebar":"tutorialSidebar"},"tutorial/development/entity":{"id":"tutorial/development/entity","title":"Entity","description":"Definition of Entities","sidebar":"tutorialSidebar"},"tutorial/development/environments/collisionenv":{"id":"tutorial/development/environments/collisionenv","title":"Collision Environment","description":"A CollisionEnvironment is a game environment that manages characters and obstacles. A character is an agent that participates in the game that is played in the environment (for more information on Character, click here). An obstacle is a physical object with a given geometric shape that is positioned in the environment (for more information on Obstacle, click here). The environment can handle different collision types, each described by a CollisionKind (for more information on CollisionKind, click here). A simple example showing a few functionalities can be found here.","sidebar":"tutorialSidebar"},"tutorial/development/environments/geohashenv":{"id":"tutorial/development/environments/geohashenv","title":"GeoHashEnvironment (Geospatial Grid Environment)","description":"A geospatial environment is an environment that consists of geospatial point objects. A geospatial point objects is a georeferenced location that consists of a longitude and latitude, in this case based on the coordinate reference system WGS84 EPSG:4326 CRS. A simple example showing a few functionalities can be found here.","sidebar":"tutorialSidebar"},"tutorial/development/environments/index":{"id":"tutorial/development/environments/index","title":"Environments","description":"An environment is a spatial data structure. Its main purpose is to enable performant access to resources and networks for agents. To facilitate agent movement and interactions, an environment features a number of methods and functionalities that can be called by the agents that interacts with it. Multiple environments can be associated with each other, and one or more environment(s) are generally held by a layer.","sidebar":"tutorialSidebar"},"tutorial/development/environments/spatialgraphenv":{"id":"tutorial/development/environments/spatialgraphenv","title":"SpatialGraphEnvironment (SGE)","description":"A spatial graph is a data structure that represents a graph, whose nodes have spatial locations. The addition of spatial locations to the nodes has profound effects on how these graphs are used and interpreted. The geometric graph environment for entities provides exploration and movement queries to change the internal positioning of entities along edges and nodes. In addition, it provides a routing component to find paths. A simple example showing a few functionalities can be found here.","sidebar":"tutorialSidebar"},"tutorial/development/environments/spatialhashenv":{"id":"tutorial/development/environments/spatialhashenv","title":"SpatialHashEnvironment (Grid Environment)","description":"A grid is an environment in which the world is divided into cells of equal size, like on a chessboard. An object (an agent or an entity) on the grid can be moved along the horizontal, vertical, and diagonal axes. A simple example showing a few functionalities can be found here.","sidebar":"tutorialSidebar"},"tutorial/development/known-problems":{"id":"tutorial/development/known-problems","title":"Known Problems and Solutions","description":"This article includes a list of common problems that might occur when working with the MARS runtime system and offers some solutions to them.","sidebar":"tutorialSidebar"},"tutorial/development/layers":{"id":"tutorial/development/layers","title":"Layers","description":"Layers represent the environment in which agents live. They serve as surrounding for their dependent agents. In this context, they are responsible to create their agents. Do not confuse layers with the `Environment`-type that is a data structure that is used for moving and exploring spatial objects (agents and entities). A layer may however use an environment that is used by its agents.","sidebar":"tutorialSidebar"},"tutorial/development/model":{"id":"tutorial/development/model","title":"ModelDescription","description":"Model Definition","sidebar":"tutorialSidebar"},"tutorial/development/spawning":{"id":"tutorial/development/spawning","title":"Spawning and Removing Agents and Entities","description":"To create instances of agent types and registering them at the runtime system to process the Tick(), two concepts are available:","sidebar":"tutorialSidebar"},"tutorial/installation":{"id":"tutorial/installation","title":"Installation","description":"The MARS framework is written in C#/.NET, so you need to install the .NET-SDK on your computer to develop MARS models.","sidebar":"tutorialSidebar"},"tutorial/intro":{"id":"tutorial/intro","title":"Introduction","description":"In this article, general concepts such as model and multi-agent system are described. A general understanding of these concepts is essential to being able to design effective models and work with the MARS systems.","sidebar":"tutorialSidebar"},"tutorial/mars-basics/configuration":{"id":"tutorial/mars-basics/configuration","title":"Configuration","description":"On this article we will show you some basic settings you can change to configure your model. For more comprehensive look into all option look here.","sidebar":"tutorialSidebar"},"tutorial/mars-basics/first-model":{"id":"tutorial/mars-basics/first-model","title":"Your first model","description":"After reading about the concepts in the previous chapter you are now ready to build and set up a first model yourself!","sidebar":"tutorialSidebar"},"tutorial/mars-basics/index":{"id":"tutorial/mars-basics/index","title":"Concepts","description":"A simulation is the execution of a model (representation of a system) in a predefined scenario.","sidebar":"tutorialSidebar"},"tutorial/mars-basics/outputs":{"id":"tutorial/mars-basics/outputs","title":"Outputs","description":"After you run the model, by hitting the Build-Taks in JetBrains Raider (small green triangle in the upper left of the IDE), the simulation will run, and produce outputs.","sidebar":"tutorialSidebar"},"tutorial/mars-explorer":{"id":"tutorial/mars-explorer","title":"MARS Explorer","description":"The MARS Explorer is an integrated development environment for creating and executing MARS simulations.","sidebar":"tutorialSidebar"},"tutorial/snippets/agent-states":{"id":"tutorial/snippets/agent-states","title":"Agent state","description":"","sidebar":"tutorialSidebar"},"tutorial/snippets/movement":{"id":"tutorial/snippets/movement","title":"Movement","description":"Movement on grid","sidebar":"tutorialSidebar"},"tutorial/soh/agents/agents":{"id":"tutorial/soh/agents/agents","title":"Agents","description":"SmartOpenHamburg uses agents to map mobility behaviour. The system offers different pre-defined types that can be used to investigate different scenarios. Existing types can be reused, and new classes can be defined.","sidebar":"tutorialSidebar"},"tutorial/soh/agents/citizen":{"id":"tutorial/soh/agents/citizen","title":"Citizen","description":"The `Citizen agent is a MultiCapableAgent` that has a dayplan of activities over the day at different locations.","sidebar":"tutorialSidebar"},"tutorial/soh/agents/multi_capable_agent":{"id":"tutorial/soh/agents/multi_capable_agent","title":"Multi-Capable Agent","description":"The `MultiCapableAgent agent is a MultimodalAgent` that implements different steering capabilities.","sidebar":"tutorialSidebar"},"tutorial/soh/agents/multi_modal_agent":{"id":"tutorial/soh/agents/multi_modal_agent","title":"Multimodal Agent","description":"The `MultimodalAgent agent can handle any modal type and thus any change between modal types. It has a representational MultimodalRoadUser` that holds physical sizes and is placed in the environment.","sidebar":"tutorialSidebar"},"tutorial/soh/agents/traveler":{"id":"tutorial/soh/agents/traveler","title":"Traveler","description":"A traveler agent tries to move from start to goal. He/she may use different modalities for that purpose.","sidebar":"tutorialSidebar"},"tutorial/soh/entities":{"id":"tutorial/soh/entities","title":"Entities","description":"SmartOpenHamburg distinguishes between agents (acting individuals) and entities (usable objects) within the simulation. Both can be initialized using files (see Agent Configuration).","sidebar":"tutorialSidebar"},"tutorial/soh/getting-started":{"id":"tutorial/soh/getting-started","title":"Quick Start","description":"This getting started describes the steps to download the model, which necessary dependencies have to be installed and how a concrete model is started.","sidebar":"tutorialSidebar"},"tutorial/soh/index":{"id":"tutorial/soh/index","title":"![Image](soh_log.png) SmartOpenHamburg","description":"SmartOpenHamburg (SOH) is a microscopic, multi-modal mobility simulation for large-scale scenarios. The model can be used to build digital twins for decisions support systems.","sidebar":"tutorialSidebar"},"tutorial/soh/layers/modal_layer":{"id":"tutorial/soh/layers/modal_layer","title":"Modal Layer","description":"The `ModalLayer` provides access to resources for the respective modal type.","sidebar":"tutorialSidebar"},"tutorial/soh/layers/multi_modal_layer":{"id":"tutorial/soh/layers/multi_modal_layer","title":"Multimodal Layer","description":"Every `MultimodalAgent requires a MultimodalLayer` that provides access to relevant resources within a multimodal context.","sidebar":"tutorialSidebar"},"tutorial/soh/layers/scheduling_layer":{"id":"tutorial/soh/layers/scheduling_layer","title":"Scheduler Layer","description":"The scheduling layer can be used to connect time events to specific locations. Such an event can be used for event management or the creation of new agents.","sidebar":"tutorialSidebar"},"tutorial/soh/layers/vector_layer":{"id":"tutorial/soh/layers/vector_layer","title":"Vector Layer","description":"The SmartOpenHamburg model implements a number of vector-layers (more about vector-layers and how to define them can be found here).","sidebar":"tutorialSidebar"},"tutorial/soh/scenarios/ferry_transfer":{"id":"tutorial/soh/scenarios/ferry_transfer","title":"FerryTransfer","description":"\ud83d\udcbe Download of the model","sidebar":"tutorialSidebar"},"tutorial/soh/scenarios/green_4_bikes":{"id":"tutorial/soh/scenarios/green_4_bikes","title":"Green4Bikes","description":"\ud83d\udcbe Download of the model","sidebar":"tutorialSidebar"},"tutorial/soh/scenarios/index":{"id":"tutorial/soh/scenarios/index","title":"Ready to use scenarios","description":"This section contains multiple ready-to-use scenarios, which can be downloaded and started directly without any further installation. Further details are described for each scenario individually.","sidebar":"tutorialSidebar"},"tutorial/soh/steering":{"id":"tutorial/soh/steering","title":"Steering concept","description":"To use a transportation capability (modal type) an agent requires to implement the `ISteeringCapable interface (e.g. ICarSteeringCapable, see figure below), which defines methods and properties that this agent must offer to be able to steer that Vehicle`.","sidebar":"tutorialSidebar"}}}')}}]);