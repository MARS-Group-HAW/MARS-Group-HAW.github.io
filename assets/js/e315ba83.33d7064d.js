"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6195],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66310:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const r={},o="Citizen",l={unversionedId:"tutorial/soh/agents/citizen",id:"tutorial/soh/agents/citizen",title:"Citizen",description:"The `Citizen agent is a MultiCapableAgent` that has a dayplan of activities over the day at different locations.",source:"@site/docs/tutorial/soh/agents/citizen.md",sourceDirName:"tutorial/soh/agents",slug:"/tutorial/soh/agents/citizen",permalink:"/docs/tutorial/soh/agents/citizen",draft:!1,editUrl:"https://github.com/MARS-Group-HAW/MARS-Group-HAW.github.io/edit/main/docs/tutorial/soh/agents/citizen.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multi-Capable Agent",permalink:"/docs/tutorial/soh/agents/multi_capable_agent"},next:{title:"Traveler",permalink:"/docs/tutorial/soh/agents/traveler"}},s={},p=[],c={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"citizen"},"Citizen"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Citizen")," agent is a ",(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/soh/agents/multi_capable_agent"},(0,a.kt)("inlineCode",{parentName:"a"},"MultiCapableAgent"))," that has a dayplan of activities over the day at different locations.\nThe dayplan is generated by statistical distribution (see figure below) depending on the properties ",(0,a.kt)("inlineCode",{parentName:"p"},"Worker")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"PartTimeWorker"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"uml_domain_model",src:n(66244).Z,width:"1635",height:"312"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Source: ",(0,a.kt)("a",{parentName:"em",href:"https://mobilitaet-in-tabellen.dlr.de/mit/"},"Mobilit\xe4t in Deutschland"))),(0,a.kt)("p",null,"On the start point in time of a new action the ",(0,a.kt)("inlineCode",{parentName:"p"},"Citizen")," moves to the wanted location. The agent may use different transportation devices depending on its capabilities (see ",(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/soh/agents/multi_capable_agent"},(0,a.kt)("inlineCode",{parentName:"a"},"MultiCapableAgent")),") and the availability of vehicles in the current surrounding (see  ",(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/soh/layers/multi_modal_layer"},(0,a.kt)("inlineCode",{parentName:"a"},"MultimodalLayer")),")."),(0,a.kt)("mermaid",{value:"classDiagram\n    class Citizen {\n        + Citizen(citizenLayer:CitizenLayer, position:Position, worker:bool, partTimeWorker:bool)\n        + Worker : bool\n        + PartTimeWorker : bool\n        + CapabilityDrivingWithProbability : double\n        + DayPlan : DayPlan\n        + Home : PointOfInterest\n        + Work : PointOfInterest\n        + ActionLookupRadiusInMeter : double\n        + ^Tick() void\n        + ChangeWork(position:Position) void\n        + ChangeHome(position:Position) void\n    }\n\n    MultiCapableAgent <|-- Citizen\n\n    class MultiCapableAgent {\n         <<abstract>>\n        + MultiCapableAgent(multimodalLayer:IMultimodalLayer, position:Position)\n        + Capabilities : IEnumerable<ModalType> \n        + AgentCapabilities : string \n        + CapabilityDriving : bool  \n        + CapabilityCycling : bool  \n        + ExpectedTravelTime : int\n        + StoreTickResult : bool  \n        + ActualTravelTime : int \n        + RouteMainModalActualTravelTime : int\n        + RouteMainModality : string \n        + RouteModalities : string \n        + RouteModalityCount : int \n        + RouteMainModalRouteLength : int \n        + ^Move() : void\n        + ^Notify(passengerMessage:PassengerMessage) : void\n        + ActiveCapability : ModalType \n        + OvertakingActivated : bool \n        + CurrentlyCarDriving : bool \n        + DriverRandom : double \n        + DriverType : DriverType \n        + CyclingPower : double \n        + Gradient : double  = 0\n    }\n    Pedestrian <|-- MultiCapableAgent\n    ICarSteeringCapable <|-- MultiCapableAgent\n    IBicycleSteeringAndRentalCapable <|-- MultiCapableAgent\n\n    class Pedestrian {\n        + Pedestrian(multimodalLayer:IMultimodalLayer, position:Position)\n        + PerceptionInMeter double = 1.0\n        + Gender GenderType\n        + SetWalking() void\n        + SetRunning() void\n        + ^Tick() void\n        + ^Notify(passengerMessage:PassengerMessage) void\n        + PreferredSpeed : double\n    }\n\n    MultimodalAgent <|-- Pedestrian\n    IWalkingCapable <|-- Pedestrian\n\n    class GenderType {\n        <<enumeration>>\n        Male\n        Female\n    }"}))}u.isMDXComponent=!0},66244:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/wegzweck_nach_uhrzeit-5c41d2a7d705fbdb281065c03fe6b093.png"}}]);